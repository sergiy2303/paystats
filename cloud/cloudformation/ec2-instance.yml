Parameters:
  Environment:
    Description: Global environment
    Type: String
Mappings:
  EnvironmentMap:
    dev:
      InstanceType: t2.micro
      Ami: ami-006dcf34c09e50022
      Key: dev-key
      SubnetId: subnet-0652a094ee7c46892
      IamProfileName: EC2Role
Resources:
  PaystatsInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: !FindInMap [EnvironmentMap, !Ref Environment, Ami]
      InstanceType: !FindInMap [EnvironmentMap, !Ref Environment, InstanceType]
      KeyName: !FindInMap [EnvironmentMap, !Ref Environment, Key]
      IamInstanceProfile: !FindInMap [EnvironmentMap, !Ref Environment, IamProfileName]
      NetworkInterfaces:
        -
          AssociatePublicIpAddress: true
          Description: Network interface for Instance
          DeviceIndex: 0
          SubnetId: !FindInMap [ EnvironmentMap, !Ref "Environment", SubnetId]
          GroupSet:
            - Fn::ImportValue: !Join [ "-", [ webserver-sg, !Ref "Environment" ] ]
            - Fn::ImportValue: !Join [ "-", [ ssh-sg, !Ref "Environment" ] ]
      Tags:
        - Key: Environment
          Value: !Ref Environment
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          yum update -y
          yum install -y ruby wget jq docker
          wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto
          systemctl enable docker
          systemctl start docker
