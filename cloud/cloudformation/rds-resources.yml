AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Environment:
    Description: Global environment
    Type: String
  ProjectName:
    Description: ProjectName
    Type: String
Mappings:
  EnvironmentMap:
    dev:
      InstanceType: db.t3.micro
      Size: 20
      StorageClass: gp2
Resources:
  DBInstance:
    Type: AWS::RDS::DBInstance
    DependsOn:
      - SubnetGroup
      - DBSecurityGroup
    Properties:
      DBName: !Sub ${ProjectName}_${Environment}
      DBInstanceIdentifier: !Sub ${ProjectName}-${Environment}
      Engine: postgres
      EngineVersion: 15.2
      DBInstanceClass: !FindInMap [EnvironmentMap, !Ref Environment, InstanceType]
      StorageType: !FindInMap [EnvironmentMap, !Ref Environment, StorageClass]
      MasterUsername:
        Fn::Sub:
          - "{{resolve:ssm:/${ProjectName}/${Environment}/database_user}}"
          - Environment: !Ref Environment
            ProjectName: !Ref ProjectName
      MasterUserPassword:
        Fn::Sub:
          - "{{resolve:ssm-secure:/${ProjectName}/${Environment}/database_password}}"
          - Environment: !Ref Environment
            ProjectName: !Ref ProjectName
      AllocatedStorage: !FindInMap [EnvironmentMap, !Ref Environment, Size]
      DBSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Join [ "-", [ subnet-group, !Ref "Environment" ] ]

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      EC2VpcId:
        Fn::ImportValue: !Join [ "-", [ vpc, !Ref "Environment" ] ]
      DBSecurityGroupIngress:
        EC2SecurityGroupId:
          Fn::ImportValue: !Join [ "-", [ webserver-sg, !Ref "Environment" ] ]
      GroupDescription: Ec2 Access

  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Join [ "-", [ subnet-group, !Ref "Environment" ] ]
      DBSubnetGroupDescription: "Subnet Group for RDS"
      SubnetIds:
        - Fn::ImportValue: !Sub private-subnet-a-${Environment}
        - Fn::ImportValue: !Sub private-subnet-b-${Environment}
        - Fn::ImportValue: !Sub private-subnet-c-${Environment}

  DBUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Database url
      Name: !Sub /${ProjectName}/${Environment}/database_host
      Type: String
      Value: !GetAtt DBInstance.Endpoint.Address
